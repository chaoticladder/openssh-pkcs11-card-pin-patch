Note: this is dangerous. Be sure you know what you're doing and why 
  you are doing it.

patch is against openssh 7.6p1
* adds -A flag to ssh-add (-A for pkcs11 PIN instead of password prompt.)
  e.g. ssh-add -A 123456 -s /usr/local/lib/opensc-pkcs11.so
* adds pkcs11pin option to ssh config
  e.g. ssh -o PKCS11PIN=123456 host.domain.com 
       or put PKCS11PIN in ssh_config

man pages for ssh and ssh-add document new options/config

To use do something like
download unpack openssh
cd /path_to/openssh-7.6p1
patch <openssh-7.6p1-pin.patch
./configure --prefix=/usr/local
make
make install


--- readconf.c.orig	2017-10-02 12:34:26.000000000 -0700
+++ readconf.c	2017-11-22 10:17:23.000000000 -0800
@@ -156,7 +156,7 @@
 	oPubkeyAuthentication,
 	oKbdInteractiveAuthentication, oKbdInteractiveDevices, oHostKeyAlias,
 	oDynamicForward, oPreferredAuthentications, oHostbasedAuthentication,
-	oHostKeyAlgorithms, oBindAddress, oPKCS11Provider,
+	oHostKeyAlgorithms, oBindAddress, oPKCS11Provider, oPKCS11Pin,
 	oClearAllForwardings, oNoHostAuthenticationForLocalhost,
 	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,
 	oAddressFamily, oGssAuthentication, oGssDelegateCreds,
@@ -207,6 +207,7 @@
 #ifdef ENABLE_PKCS11
 	{ "smartcarddevice", oPKCS11Provider },
 	{ "pkcs11provider", oPKCS11Provider },
+	{ "pkcs11pin", oPKCS11Pin },
 # else
 	{ "smartcarddevice", oUnsupported },
 	{ "pkcs11provider", oUnsupported },
@@ -1130,6 +1131,10 @@
 		charptr = &options->pkcs11_provider;
 		goto parse_string;
 
+	case oPKCS11Pin:
+		charptr = &options->pkcs11_pin;
+		goto parse_string;
+
 	case oProxyCommand:
 		charptr = &options->proxy_command;
 		/* Ignore ProxyCommand if ProxyJump already specified */
@@ -1831,6 +1836,7 @@
 	options->preferred_authentications = NULL;
 	options->bind_address = NULL;
 	options->pkcs11_provider = NULL;
+	options->pkcs11_pin = NULL;
 	options->enable_ssh_keysign = - 1;
 	options->no_host_authentication_for_localhost = - 1;
 	options->identities_only = - 1;
--- readconf.h.orig	2017-10-02 12:34:26.000000000 -0700
+++ readconf.h	2017-11-22 10:17:23.000000000 -0800
@@ -82,6 +82,7 @@
 	char   *preferred_authentications;
 	char   *bind_address;	/* local socket address for connection to sshd */
 	char   *pkcs11_provider; /* PKCS#11 provider */
+	char   *pkcs11_pin; /* PKCS#11 pin */
 	int	verify_host_key_dns;	/* Verify host key using DNS */
 
 	int     num_identity_files;	/* Number of files for RSA/DSA identities. */
--- ssh-add.1.orig	2017-10-02 12:34:26.000000000 -0700
+++ ssh-add.1	2017-11-22 10:17:23.000000000 -0800
@@ -84,6 +84,8 @@
 .Pp
 The options are as follows:
 .Bl -tag -width Ds
+.It Fl A Ar card_pin
+Get pkcs11 card pin from command line instead of prompting. 
 .It Fl c
 Indicates that added identities should be subject to confirmation before
 being used for authentication.
--- ssh-add.c.orig	2017-10-02 12:34:26.000000000 -0700
+++ ssh-add.c	2017-11-22 10:17:23.000000000 -0800
@@ -337,15 +337,20 @@
 }
 
 static int
-update_card(int agent_fd, int add, const char *id)
+update_card(int agent_fd, int add, const char *id, char *card_pass)
 {
 	char *pin = NULL;
 	int r, ret = -1;
 
 	if (add) {
-		if ((pin = read_passphrase("Enter passphrase for PKCS#11: ",
-		    RP_ALLOW_STDIN)) == NULL)
-			return -1;
+		if (card_pass == NULL) {
+			if ((pin = read_passphrase("Enter passphrase for PKCS#11: ",
+			    RP_ALLOW_STDIN)) == NULL)
+				return -1;
+		}
+		else {
+			pin = card_pass;
+		}
 	}
 
 	if ((r = ssh_update_card(agent_fd, add, id, pin == NULL ? "" : pin,
@@ -471,6 +476,7 @@
 	extern int optind;
 	int agent_fd;
 	char *pkcs11provider = NULL;
+	char *add_pass = NULL;
 	int r, i, ch, deleting = 0, ret = 0, key_only = 0;
 	int xflag = 0, lflag = 0, Dflag = 0, qflag = 0;
 
@@ -500,8 +506,12 @@
 		exit(2);
 	}
 
-	while ((ch = getopt(argc, argv, "klLcdDxXE:e:qs:t:")) != -1) {
+	while ((ch = getopt(argc, argv, "klLcdDxXE:e:qs:t:A:")) != -1) {
 		switch (ch) {
+		case 'A':
+			add_pass = xstrdup(optarg);
+			break;
+			
 		case 'E':
 			fingerprint_hash = ssh_digest_alg_by_name(optarg);
 			if (fingerprint_hash == -1)
@@ -574,7 +584,7 @@
 	argc -= optind;
 	argv += optind;
 	if (pkcs11provider != NULL) {
-		if (update_card(agent_fd, !deleting, pkcs11provider) == -1)
+		if (update_card(agent_fd, !deleting, pkcs11provider, add_pass) == -1)
 			ret = 1;
 		goto done;
 	}
--- ssh.c.orig	2017-10-02 12:34:26.000000000 -0700
+++ ssh.c	2017-11-22 10:17:23.000000000 -0800
@@ -1908,7 +1908,7 @@
 	if (options.pkcs11_provider != NULL &&
 	    options.num_identity_files < SSH_MAX_IDENTITY_FILES &&
 	    (pkcs11_init(!options.batch_mode) == 0) &&
-	    (nkeys = pkcs11_add_provider(options.pkcs11_provider, NULL,
+	    (nkeys = pkcs11_add_provider(options.pkcs11_provider, options.pkcs11_pin,
 	    &keys)) > 0) {
 		for (i = 0; i < nkeys; i++) {
 			if (n_ids >= SSH_MAX_IDENTITY_FILES) {
--- ssh_config.5.orig	2017-10-02 12:34:26.000000000 -0700
+++ ssh_config.5	2017-11-22 10:17:23.000000000 -0800
@@ -1139,6 +1139,10 @@
 or
 .Cm no
 (the default).
+.It Cm PKCS11PIN
+Specifies the PIN the PKCS#11 provider should use. The default is for
+.Xr ssh 1
+to prompt for the PIN.
 .It Cm PKCS11Provider
 Specifies which PKCS#11 provider to use.
 The argument to this keyword is the PKCS#11 shared library
